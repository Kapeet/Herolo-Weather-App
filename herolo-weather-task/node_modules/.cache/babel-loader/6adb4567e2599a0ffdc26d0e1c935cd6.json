{"ast":null,"code":"var _jsxFileName = \"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport MainCityCard from './components/MainCityCard/MainCityCard';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; //these are the parameters i used for the offline json data\n//autocomplete query word: 'israel'\n//currentconditions location key = '3493236', details = true\n//5daysOfDailyForecasts - details = true, metric = true.\n//api key: \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Homepage() {\n  _s();\n\n  const [userQuery, setUserQuery] = useState(''); //This is what the user types in the searchbar input.\n\n  const [isSearchFormSubmitted, setSearchFormSubmitted] = useState(false);\n  const [APIdata, setAPIdata] = useState({\n    locations: [],\n    currentWeather: null,\n    fiveDayForecast: null,\n    locationKeys: []\n  });\n\n  const onInputSubmitted = event => {\n    console.log(event);\n    event.preventDefault();\n    setSearchFormSubmitted(true);\n    console.log(\"user final query: \" + userQuery);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      userQuery: userQuery,\n      setUserQuery: setUserQuery,\n      APIdata: APIdata,\n      setAPIdata: setAPIdata,\n      onInputSubmitted: onInputSubmitted,\n      isSearchFormSubmitted: isSearchFormSubmitted,\n      setSearchFormSubmitted: setSearchFormSubmitted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isSearchFormSubmitted && userQuery.length ? /*#__PURE__*/_jsxDEV(MainCityCard, {\n      MainCityName: userQuery,\n      locationKey: APIdata.locationKeys[0] ? APIdata.locationKeys[0] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 57\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"4f5Ag27OYOgtKowQZVVUXoIGHFU=\");\n\n_c = Homepage;\nexport function Favorites() {\n  _s2();\n\n  const favorites = useSelector(state => state.favorites.cities);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favorites.map(city => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"favorites-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: city.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: city.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: city.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Favorites, \"ZRo3KjMJMZW4eLCHKVN8KKqwThY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = Favorites;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Homepage\");\n$RefreshReg$(_c2, \"Favorites\");","map":{"version":3,"sources":["/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/App.js"],"names":["Searchbar","MainCityCard","useState","useSelector","useDispatch","Homepage","userQuery","setUserQuery","isSearchFormSubmitted","setSearchFormSubmitted","APIdata","setAPIdata","locations","currentWeather","fiveDayForecast","locationKeys","onInputSubmitted","event","console","log","preventDefault","length","Favorites","favorites","state","cities","dispatch","map","city","name","temp","text"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC,C,CACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAFyB,CAEuB;;AAChD,QAAM,CAACM,qBAAD,EAAwBC,sBAAxB,IAAkDP,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACrCU,IAAAA,SAAS,EAAE,EAD0B;AAErCC,IAAAA,cAAc,EAAE,IAFqB;AAGrCC,IAAAA,eAAe,EAAE,IAHoB;AAIrCC,IAAAA,YAAY,EAAE;AAJuB,GAAD,CAAtC;;AAOA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAA,IAAAA,KAAK,CAACG,cAAN;AACAX,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqBb,SAAjC;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,SAAD;AACE,MAAA,SAAS,EAAEA,SADb;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,OAAO,EAAEG,OAHX;AAIE,MAAA,UAAU,EAAEC,UAJd;AAKE,MAAA,gBAAgB,EAAEK,gBALpB;AAME,MAAA,qBAAqB,EAAER,qBANzB;AAOE,MAAA,sBAAsB,EAAEC;AAP1B;AAAA;AAAA;AAAA;AAAA,YAFF,EAWOD,qBAAqB,IAAIF,SAAS,CAACe,MAApC,gBAA8C,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEf,SAA5B;AAAuC,MAAA,WAAW,EAAEI,OAAO,CAACK,YAAR,CAAqB,CAArB,IAA0BL,OAAO,CAACK,YAAR,CAAqB,CAArB,CAA1B,GAAoD;AAAxG;AAAA;AAAA;AAAA;AAAA,YAA9C,GAAkK,EAXxK;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjCeV,Q;;KAAAA,Q;AAmChB,OAAO,SAASiB,SAAT,GAAqB;AAAA;;AAC1B,QAAMC,SAAS,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAK,CAACD,SAAN,CAAgBE,MAA5B,CAA7B;AACA,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,gBACCmB,SAAS,CAACI,GAAV,CAAcC,IAAI,IAAI;AACrB,4BACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IAlBeT,S;UACInB,W,EACDC,W;;;MAFHkB,S","sourcesContent":["import './App.css';\nimport Searchbar from './components/Searchbar/Searchbar'\nimport MainCityCard from './components/MainCityCard/MainCityCard';\nimport { useState } from 'react';\n\nimport { useSelector,useDispatch } from 'react-redux';\n//these are the parameters i used for the offline json data\n//autocomplete query word: 'israel'\n//currentconditions location key = '3493236', details = true\n//5daysOfDailyForecasts - details = true, metric = true.\n//api key: \n\nexport function Homepage() {\n  \n  const [userQuery, setUserQuery] = useState(''); //This is what the user types in the searchbar input.\n  const [isSearchFormSubmitted, setSearchFormSubmitted] = useState(false);\n  const [APIdata, setAPIdata] = useState({\n    locations: [],\n    currentWeather: null,\n    fiveDayForecast: null,\n    locationKeys: []\n  });\n\n  const onInputSubmitted = (event) => {\n    console.log(event);\n    event.preventDefault();\n    setSearchFormSubmitted(true);\n    console.log(\"user final query: \"+userQuery);\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <Searchbar \n        userQuery={userQuery} \n        setUserQuery={setUserQuery} \n        APIdata={APIdata} \n        setAPIdata={setAPIdata} \n        onInputSubmitted={onInputSubmitted}\n        isSearchFormSubmitted={isSearchFormSubmitted}\n        setSearchFormSubmitted={setSearchFormSubmitted}\n        />\n         {(isSearchFormSubmitted && userQuery.length) ? <MainCityCard MainCityName={userQuery} locationKey={APIdata.locationKeys[0] ? APIdata.locationKeys[0] : null}/>   : ''}\n    </div>\n  );\n}\n\nexport function Favorites() {\n  const favorites = useSelector((state) => state.favorites.cities);\n  const dispatch = useDispatch(); \n  return (\n    <div className=\"App\">\n      <ul>\n      {favorites.map(city => {\n        return (\n          <li className=\"favorites-list\">\n              <h1>{city.name}</h1>\n              <p>{city.temp}</p>\n              <p>{city.text}</p>\n          </li>\n        )\n      })}\n      </ul>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}