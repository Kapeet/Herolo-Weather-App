{"ast":null,"code":"var _jsxFileName = \"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/AutoComplete.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useRef, useState } from \"react\";\nimport './Autocomplete.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AutoComplete(_ref) {\n  _s();\n\n  let {\n    userQuery,\n    setUserQuery,\n    suggestionsProp,\n    onSubmit,\n    APIdata,\n    setAPIdata,\n    isSearchFormSubmitted,\n    setSearchFormSubmitted\n  } = _ref;\n  const suggestionListElement = useRef(null);\n  const [suggestionState, setSuggestionState] = useState({\n    activeSuggestion: 0,\n    filteredSuggestions: [],\n    showSuggestions: false,\n    userInput: \"\"\n  });\n\n  const onChange = e => {\n    let newUserInput = e.target.value;\n\n    if (newUserInput.length > 0) {\n      fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${newUserInput}`).then(response => response.json()).then(data => {\n        let APIlocations = data.map(item => {\n          return item.LocalizedName;\n        });\n        let APIlocationKeys = data.map(item => {\n          return item.Key;\n        });\n\n        if (APIlocations != null) {\n          setAPIdata({\n            locations: APIlocations,\n            currentWeather: null,\n            fiveDayForecast: null,\n            locationKeys: APIlocationKeys\n          });\n          let copiedFilteredSuggestions = APIlocations.filter(suggestion => suggestion.toLowerCase().indexOf(newUserInput.toLowerCase()) > -1); //filter suggestions based on user input\n\n          let uniqueSuggestions = copiedFilteredSuggestions.filter((item, index) => {\n            return copiedFilteredSuggestions.indexOf(item) === index;\n          }); //remove duplicate suggestions from the original array\n\n          setSuggestionState({\n            activeSuggestion: 0,\n            filteredSuggestions: uniqueSuggestions,\n            showSuggestions: true,\n            userInput: newUserInput\n          });\n          setUserQuery(newUserInput);\n        }\n      });\n    } else {\n      setSearchFormSubmitted(false);\n      setSuggestionState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: true,\n        userInput: newUserInput\n      });\n    }\n  };\n\n  const onClickedSuggestion = e => {\n    if (e.target.value) {\n      setSuggestionState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: e.target.value\n      });\n    } else {\n      setSuggestionState({\n        activeSuggestion: 0,\n        showSuggestions: false\n      });\n    }\n\n    setSearchFormSubmitted(true);\n    onSubmit(e);\n  };\n\n  const onKeyDown = e => {\n    let newActiveSuggestion = suggestionState.activeSuggestion;\n    let newFilteredSuggestions = suggestionState.filteredSuggestions;\n\n    if (e.keyCode === 13) {\n      //check if user pressed the 'enter' key.\n      setSuggestionState({\n        activeSuggestion: newActiveSuggestion,\n        showSuggestions: false,\n        filteredSuggestions: newFilteredSuggestions,\n        userInput: newFilteredSuggestions[newActiveSuggestion]\n      });\n      setUserQuery(newFilteredSuggestions[newActiveSuggestion]);\n    } else if (e.keyCode === 38) {\n      //otherwise, check if the user pressed the 'Up arrow' key.\n      if (newActiveSuggestion === 0) {\n        return;\n      }\n\n      setSuggestionState({ ...suggestionState,\n        activeSuggestion: newActiveSuggestion - 1\n      });\n    } else if (e.keyCode === 40) {\n      //else, check if the user pressed the 'Down arrow' key.\n      if (newActiveSuggestion - 1 >= newFilteredSuggestions.length) {\n        return;\n      }\n\n      setSuggestionState({ ...suggestionState,\n        activeSuggestion: newActiveSuggestion + 1\n      });\n    }\n  };\n\n  useEffect(() => {}, [suggestionListElement]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: suggestionState.userInput,\n      placeholder: \"Tel aviv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions\",\n      ref: suggestionListElement,\n      children: suggestionState.showSuggestions && suggestionState.userInput && suggestionState.filteredSuggestions.length ? suggestionState.filteredSuggestions.map((suggestion, index) => {\n        let classname;\n\n        if (index === suggestionState.activeSuggestion) {\n          classname = \"suggestion-active\";\n        }\n\n        if (suggestionState.filteredSuggestions[index] !== suggestionState.filteredSuggestions[index - 1]) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classname,\n            onClick: onClickedSuggestion,\n            children: suggestion\n          }, suggestion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this);\n        } else {\n          return '';\n        }\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AutoComplete, \"TrQyBSqs09I8iI0eiY06jVKa8so=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"sources":["/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/AutoComplete.js"],"names":["React","useEffect","useRef","useState","AutoComplete","userQuery","setUserQuery","suggestionsProp","onSubmit","APIdata","setAPIdata","isSearchFormSubmitted","setSearchFormSubmitted","suggestionListElement","suggestionState","setSuggestionState","activeSuggestion","filteredSuggestions","showSuggestions","userInput","onChange","e","newUserInput","target","value","length","fetch","process","env","REACT_APP_API_KEY","then","response","json","data","APIlocations","map","item","LocalizedName","APIlocationKeys","Key","locations","currentWeather","fiveDayForecast","locationKeys","copiedFilteredSuggestions","filter","suggestion","toLowerCase","indexOf","uniqueSuggestions","index","onClickedSuggestion","onKeyDown","newActiveSuggestion","newFilteredSuggestions","keyCode","classname"],"mappings":"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","sourcesContent":["import { React, useEffect, useRef, useState } from \"react\"\nimport './Autocomplete.css'\nexport default function AutoComplete({ userQuery, setUserQuery, suggestionsProp, onSubmit, APIdata, setAPIdata, isSearchFormSubmitted, setSearchFormSubmitted}) {\n    const suggestionListElement = useRef(null);\n\n    const [suggestionState, setSuggestionState] = useState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: \"\"\n    });\n    const onChange = e => {\n                \n        let newUserInput = e.target.value;\n        if (newUserInput.length > 0)\n        {\n            fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${newUserInput}`)\n            .then(response => response.json())\n            .then(data => {\n                let APIlocations = data.map(item => {return item.LocalizedName});\n                let APIlocationKeys = data.map(item => {return item.Key});\n\n                if (APIlocations != null)\n                {\n                    setAPIdata({\n                        locations: APIlocations,\n                        currentWeather: null,\n                        fiveDayForecast: null,\n                        locationKeys: APIlocationKeys\n                    });\n\n                    \n                    let copiedFilteredSuggestions = APIlocations.filter(suggestion => suggestion.toLowerCase().indexOf(newUserInput.toLowerCase()) > -1); //filter suggestions based on user input\n                    let uniqueSuggestions = copiedFilteredSuggestions.filter((item, index) => {return copiedFilteredSuggestions.indexOf(item) === index;}); //remove duplicate suggestions from the original array\n                    setSuggestionState({\n                        activeSuggestion: 0,\n                        filteredSuggestions: uniqueSuggestions,\n                        showSuggestions: true,\n                        userInput: newUserInput\n                    });\n                    setUserQuery(newUserInput);\n                }\n            });\n        }\n        else\n        {\n            setSearchFormSubmitted(false);\n            setSuggestionState({\n                activeSuggestion: 0,\n                filteredSuggestions: [],\n                showSuggestions: true,\n                userInput: newUserInput\n            });\n        }\n       \n        \n    };\n\n    const onClickedSuggestion = e => {\n        if (e.target.value)\n        {\n            setSuggestionState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n                userInput: e.target.value\n            });\n        }\n        else\n        {\n            setSuggestionState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n            });\n        }\n        \n        setSearchFormSubmitted(true);\n        onSubmit(e);\n\n    }\n    \n    const onKeyDown = e => {\n        let newActiveSuggestion = suggestionState.activeSuggestion;\n        let newFilteredSuggestions = suggestionState.filteredSuggestions;\n        if (e.keyCode === 13) { //check if user pressed the 'enter' key.\n            setSuggestionState({\n                activeSuggestion: newActiveSuggestion,\n                showSuggestions: false,\n                filteredSuggestions: newFilteredSuggestions,\n                userInput: newFilteredSuggestions[newActiveSuggestion]\n            });\n            setUserQuery(newFilteredSuggestions[newActiveSuggestion]);\n        }\n        else if (e.keyCode === 38) { //otherwise, check if the user pressed the 'Up arrow' key.\n            if (newActiveSuggestion === 0) {return;}\n            setSuggestionState({\n                ...suggestionState,\n                activeSuggestion: newActiveSuggestion - 1,\n            });\n        }\n        else if (e.keyCode === 40) { //else, check if the user pressed the 'Down arrow' key.\n            if (newActiveSuggestion-1 >= newFilteredSuggestions.length) {return;} \n            \n            setSuggestionState({\n                ...suggestionState,\n                activeSuggestion: (newActiveSuggestion+1),\n            });\n            \n        }\n    }\n\n    useEffect(() => {\n    },[suggestionListElement])\n    return (\n        <>\n            <input \n                type=\"text\"\n                onChange={onChange}\n                onKeyDown={onKeyDown}\n                value={suggestionState.userInput}\n                placeholder=\"Tel aviv\"\n                />\n                <ul className=\"suggestions\" ref={suggestionListElement}>\n                {\n                    (suggestionState.showSuggestions && suggestionState.userInput && suggestionState.filteredSuggestions.length) \n                    ?        \n                        suggestionState.filteredSuggestions.map((suggestion, index) => {\n                            let classname;\n                            if (index===suggestionState.activeSuggestion) {\n                                classname = \"suggestion-active\";\n                            }\n                            if (suggestionState.filteredSuggestions[index] !== suggestionState.filteredSuggestions[index-1])\n                            {\n                                return (\n                                    <li className={classname} key={suggestion} onClick={onClickedSuggestion}>\n                                        {suggestion}\n                                    </li>\n                                );\n                            }\n                            else {return '';}\n                        })               \n                        :    ''\n                    \n                }\n                 </ul>\n                    \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}