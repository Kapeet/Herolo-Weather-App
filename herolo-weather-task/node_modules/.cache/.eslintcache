[{"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/index.js":"1","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/reportWebVitals.js":"2","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/App.js":"3","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Navbar/navbar.js":"4","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/Searchbar.js":"5","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/MainCityCard/MainCityCard.js":"6","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/AutoComplete.js":"7","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/redux/app/store.js":"8","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/redux/features/favorites/favoriteSlice.js":"9"},{"size":1028,"mtime":1639233629466,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1639230115341,"results":"12","hashOfConfig":"11"},{"size":2052,"mtime":1639237663092,"results":"13","hashOfConfig":"11"},{"size":355,"mtime":1639239470787,"results":"14","hashOfConfig":"11"},{"size":1139,"mtime":1639240397543,"results":"15","hashOfConfig":"11"},{"size":3606,"mtime":1639239223930,"results":"16","hashOfConfig":"11"},{"size":5865,"mtime":1639240123583,"results":"17","hashOfConfig":"11"},{"size":209,"mtime":1639230910555,"results":"18","hashOfConfig":"11"},{"size":826,"mtime":1639237647208,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1b9p9v9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/index.js",[],["40","41"],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/reportWebVitals.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/App.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Navbar/navbar.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/Searchbar.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/MainCityCard/MainCityCard.js",["42"],"import React, { useEffect, useState } from 'react';\nimport './MainCityCard.css'\n\nimport { useDispatch } from 'react-redux';\nimport { addCityToFavorites } from '../../redux/features/favorites/favoriteSlice'\nconst weekday = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\nexport default function MainCityCards({MainCityName, locationKey}){\n    const dispatch = useDispatch(); \n\n    const [weatherData,setWeatherData] = useState({\n        text: '',\n        temperatureMetric: '',\n    });\n    const [fiveDayForecast, setForecast] = useState([]);\n\n    useEffect(() => {\n        //fetch weather data\n        fetch(`http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${process.env.REACT_APP_API_KEY}&details=true`)\n        .then(response => response.json())\n        .then(data => {\n            setWeatherData({\n                text: data[0].WeatherText,\n                temperatureMetric: data[0].Temperature.Metric.Value + ' ' + data[0].Temperature.Metric.Unit\n            });\n        })\n        .catch(() => setWeatherData({\n            text: 'API Limit Reached, try again later.',\n            temperatureMetric: '00C'\n        }))\n\n        //fetch five day forecast\n        fetch(`http://dataservice.accuweather.com//forecasts/v1/daily/5day/${locationKey}?apikey=${process.env.REACT_APP_API_KEY}&details=true&metric=true`)\n        .then(response => response.json())\n        .then(data => {\n            let newForecast = data.DailyForecasts.map(item => {\n                let date = new Date(item.Date);\n                let weekdayIndex = date.getDay(); //convert the date to the day of the week as a number\n                return {\n                    day: weekday[weekdayIndex],\n                    temperatureMax: item.Temperature.Maximum.Value+' '+item.Temperature.Maximum.Unit,\n                    temperatureMin: item.Temperature.Minimum.Value+' '+item.Temperature.Minimum.Unit\n                }\n            });\n            \n            setForecast(newForecast);\n        })\n        .catch(() => setForecast([]))\n    },[]);\n    return (\n        <div className=\"div\">\n            <header>\n                <div className=\"profile\">\n                    <h2>{MainCityName}</h2>\n                    <p>{weatherData.temperatureMetric ? weatherData.temperatureMetric : '' }</p>\n                </div>\n                <div className=\"buttons\">\n                    <button><img src=\"/heart.svg\" alt=\"Like Button\"/></button>\n                    <button onClick={() => {\n                     let object = {\n                         name: MainCityName,\n                         temp: weatherData.temperatureMetric,\n                         text: weatherData.text\n                     }\n                     alert(MainCityName+\" Has been added to Favorites!\");\n                     dispatch(addCityToFavorites(object))\n                    }}>Add to Favorites</button>\n                </div>\n            </header>\n            <h1 className=\"forecast-text\">{weatherData.text ? weatherData.text : ''}</h1>\n            <ul className=\"cityList\">\n                {fiveDayForecast.map((forecast, index) => {\n                    console.log(forecast);\n                    return (\n                        <li>\n                            <div>\n\n                            <h1>{forecast.day}</h1>\n                            <p>Max: {forecast.temperatureMax}</p>\n                            <p>Min: {forecast.temperatureMin}</p>\n                            </div>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n}","/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/components/Searchbar/AutoComplete.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/redux/app/store.js",[],"/home/pateesh/Desktop/Git Projects/Itamar-Hamo-7-12-2021/herolo-weather-task/src/redux/features/favorites/favoriteSlice.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":48,"column":7,"nodeType":"49","endLine":48,"endColumn":9,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'locationKey'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [locationKey]",{"range":"56","text":"57"},[2070,2072],"[locationKey]"]